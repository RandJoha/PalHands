openapi: 3.0.3
info:
  title: PalHands API
  version: 0.1.0
servers:
  - url: http://localhost:3000
paths:
  /api/health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /api/livez:
    get:
      summary: Liveness probe
      responses:
        '200': { description: OK }
  /api/readyz:
    get:
      summary: Readiness probe
      responses:
        '200': { description: Ready }
        '503': { description: Not ready }
  /api/auth/register:
    post:
      summary: Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [firstName, email, phone, password]
              properties:
                firstName: { type: string }
                lastName: { type: string }
                email: { type: string, format: email }
                phone: { type: string }
                password: { type: string, format: password }
                role: { type: string, enum: [client, provider, admin] }
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
  /api/auth/validate:
    get:
      summary: Validate token
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
  /api/users/profile:
    put:
      summary: Update profile
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200': { description: Updated }
  /api/users/change-password:
    put:
      summary: Change password
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [currentPassword, newPassword]
              properties:
                currentPassword: { type: string }
                newPassword: { type: string }
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
